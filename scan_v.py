def ping_ip(ip):
    result = os.system(f"ping -c 1 -W 1 {ip} &>/dev/null")
    if result == 0:
        return ip
    return None

def search_exploits(ip):
    # Run searchsploit for the given IP address
    try:
        result = subprocess.check_output(["searchsploit", ip])
        return result.decode("utf-8")
    except subprocess.CalledProcessError:
        return f"No exploits found for {ip}"

def scan_network():
    def scan():
        found_devices = []
        available_interfaces = os.listdir('/sys/class/net')
        for interface in available_interfaces:
            network_prefix = os.popen(f"ip -o -4 addr show dev {interface} | awk '/inet / {{print $4}}' | cut -d'.' -f1-3").read().strip()
            ips_to_scan = [f"{network_prefix}.{i}" for i in range(1, 255)]
            with Pool(processes=available_cpu_cores()) as pool:
                results = pool.map(ping_ip, ips_to_scan)
                found_devices.extend(filter(None, results))
        # Search for exploits for each found IP address
        exploits_results = []
        for ip in found_devices:
            exploit_result = search_exploits(ip)
            exploits_results.append(exploit_result)
        return found_devices, exploits_results
    return scan()

print("Devices on the network:")
devices, exploits = scan_network()
print("Devices on the network:")
for device, exploit in zip(devices, exploits):
    print(f"Device: {device}")
    print(f"Exploits: {exploit}")
    print("=" * 30)
